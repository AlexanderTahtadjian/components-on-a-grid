html {
  box-sizing: border-box;
  background-color: #f2f1ed;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}
/*
You need to make the body your grid

.body {
display: grid;

-define columns using grid-template-columns selector (using the fr value and number of columns you want)
-define your grid layout using the grid-template-areas selector. See the notes under the CSS videos for a refresher.
*/

/*
assign cells to their grid-area however you name them.  for example:

.pano {
  grid-area: value;
}
 (Whatever makes the most sense to you to name the value.  See the notes about grid-area)
*/

.body {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  grid-gap: 1rem:
}

.pano {
  grid-area: value;
  grid-column: 2;
  grid-row: 2;
  z-index: 1;
}

img {
  width: 100%;
}

header {
  /* Remove the <header> box and allow us to directly apply headerâ€™s children to the grid. */
  display: contents;
  font-family: "Patua One";
}

.banner {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1rem;
}

.banner img {
  grid-column: 1 / -1;
  grid-row: 1 / -1;
}

.logo {
  width: 14rem;
  left: 50%;
  top: 50%;
  grid-column: 2;
  grid-row: 2;
  z-index: 1;
  margin-left: 1rem; /*use margins*/
  margin-right: 1rem; /*use margins*/
/*
You want to you the grid-columns and grid-row selector and z-index to achieve this. Remember that you can put multiple items into the same grid cell using these selectors.
*/

}

.main figure {
  grid-column: 2;
  grid-row: 2;
  z-index: 1;
}

h2 {
  font-family: "Patua One";
  color: #30658d;
}

p {
  font-family: Georgia;
  color: #000;
}

ul {
  list-style-type: none;
  display: flex;
  justify-content: space-between;
  position: absolute;
  width: 14rem;
  left: 50%;
  top: 50%;
  padding-left: 1rem;
  padding-right: 1rem;
  transform: translate(-1%, -475%);
}

li {
  display: inline-block;
  padding: 1rem;
}

a {
  font-size: 2rem;
  color: #fff;
}
